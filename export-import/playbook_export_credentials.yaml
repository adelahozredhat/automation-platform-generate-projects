---
- hosts: localhost
  gather_facts: false
  vars_files:
    - vault.yaml
  tasks:

    - name: Queue build of a project in Jenkins
      ansible.builtin.uri:
        url: "https://{{ controller_hostname_old }}/api/v2/"
        user: "{{ controller_username_old }}"
        password: "{{ controller_password_old }}"
        method: GET
        force_basic_auth: true
        validate_certs: "{{controller_validate_certs_old}}"
      register: controller_metrics
      environment:
        HTTP_PROXY: ""
        HTTPS_PROXY: ""
        NO_PROXY: ""
        http_proxy: ""
        https_proxy: ""
        no_proxy: ""

    - name: Export credential_types tower
      awx.awx.export:
        credentials: "all"
        controller_host: "{{ controller_hostname_old }}"
        controller_username: "{{ controller_username_old }}"
        controller_password: "{{ controller_password_old }}"
        validate_certs: "{{ controller_validate_certs_old }}"
      register: export_output_credentials

    - debug: 
        msg: "{{ export_output_credentials }}"

    - name: Launch a job with inventory and credential  
      awx.awx.job_launch:
        controller_host: "{{ controller_hostname_old }}"
        controller_username: "{{ controller_username_old }}"
        controller_password: "{{ controller_password_old }}"
        validate_certs: "{{ controller_validate_certs_old }}"
        job_template: "AAP Credential Export"    
        #inventory: "My Inventory"
        extra_vars:
          name_credential: "{{ item.name}}"
          name_organization: "{{ item.organization.name|default('Default') }}"
        credentials: 
          - "{{ item.name}}"
        wait: yes
      loop: "{{ export_output_credentials.assets.credentials }}" 
      register: job
      ignore_errors: yes
    
    - debug: 
        msg: "{{ job }}"

    - name: Get COntroller jobs Information
      ansible.builtin.uri:
        url: "https://{{ controller_hostname_old }}/api/v2/jobs/{{ item.id }}"
        user: "{{ controller_username_old }}"
        password: "{{ controller_password_old }}"
        method: GET
        force_basic_auth: true
        validate_certs: "{{controller_validate_certs_old}}"
      register: jobs_controller_info
      when: not (item.failed |default(false))
      loop: "{{ job.results }}"
      ignore_errors: yes
      environment:
        HTTP_PROXY: ""
        HTTPS_PROXY: ""
        NO_PROXY: ""
        http_proxy: ""
        https_proxy: ""
        no_proxy: ""     

    - debug:
        msg: "{{ jobs_controller_info }}"

    - set_fact:
        credentials_vars: |-
          [
            {% for job in jobs_controller_info.results %}
              {% if job.json is defined  %}
                {{ job.json.artifacts.injector_credentials }},
              {% endif %}
            {% endfor %}
          ] 

    - debug:
        msg: "{{ credentials_vars }}"
